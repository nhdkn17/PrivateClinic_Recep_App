package com.privateclinicms.client.controller.medicalThread;

import com.privateclinicms.client.controller.DashboardController;
import com.privateclinicms.client.utils.XMLExporter;
import com.privateclinicms.shared.dao.BenhNhanDAO;
import com.privateclinicms.shared.dao.ThuocDAO;

public class PatientWorkflow implements Runnable {
    private final int maBenhNhan;
    private final PatientThreadListener listener;

    BenhNhanDAO benhNhanDAO = new BenhNhanDAO();
    ThuocDAO thuocDAO = new ThuocDAO();
    XMLExporter exporter = new XMLExporter();
    DashboardController dashboardController = new DashboardController();

    public PatientWorkflow(int maBenhNhan, PatientThreadListener listener) {
        this.maBenhNhan = maBenhNhan;
        this.listener = listener;
    }

    @Override
    public void run() {
        try {
            System.out.println("üîÑ B·∫Øt ƒë·∫ßu quy tr√¨nh kh√°m cho b·ªánh nh√¢n ID: " + maBenhNhan);

            Thread.sleep(5000);
            System.out.println("‚úÖ Ti·∫øp nh·∫≠n xong cho b·ªánh nh√¢n " + maBenhNhan);

            Thread.sleep(5000);
            System.out.println("‚úÖ ƒêo sinh hi·ªáu xong cho b·ªánh nh√¢n " + maBenhNhan);

            Thread.sleep(5000);
            System.out.println("‚úÖ Kh√°m b√°c sƒ© xong cho b·ªánh nh√¢n " + maBenhNhan);

            Thread.sleep(5000);
            System.out.println("‚úÖ L·∫•y thu·ªëc xong cho b·ªánh nh√¢n " + maBenhNhan);

            System.out.println("üéâ Ho√†n t·∫•t quy tr√¨nh cho b·ªánh nh√¢n: " + maBenhNhan);
        } catch (InterruptedException e) {
            System.out.println("‚ö†Ô∏è ƒê√£ h·ªßy kh√°m cho b·ªánh nh√¢n: " + maBenhNhan);
        } finally {
            if (listener != null) {
                listener.onPatientThreadComplete(maBenhNhan);
            }
        }
    }
}
